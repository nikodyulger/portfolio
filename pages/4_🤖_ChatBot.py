import os
import streamlit as st
from huggingface_hub import InferenceClient

# Page settings and constants
PAGE_TITLE = "ChatBot"
PAGE_ICON = "ğŸ¤–"
HUGGINGFACE_API_KEY = os.getenv('HUGGINGFACE_API_KEY')
EXAMPLE_PROMPTS = ["Â¿QuiÃ©n es Nikola?",
                   "Â¿QuÃ© experiencia tiene Nikola?",
                   "Â¿CuÃ¡les son los proyectos de Nikola?",
                   "Â¿CuÃ¡l es la trayectoria profesional de Nikola?",
                   "Â¿CÃ³mo contactar con Nikola?",
                   "Â¿En quÃ© tipo de roles estÃ¡ interesado Nikola?"
]
CONTEXT = """
AquÃ­ estÃ¡ la informaciÃ³n sobre Nikola:

1. Â¿QuiÃ©n es Nikola?
Ingeniero informÃ¡tico con experiencia en diseÃ±o de arquitecturas en la nube, desarrollo de aplicaciones y ciencia de datos.
Vive en Albacete, pero no le importarÃ­a conocer otras ciudades de EspaÃ±a.
Le gusta trabajar en equipo, aprender cÃ³mo las cosas funcionan, seguir las buenas prÃ¡cticas y por supuesto divertirse mientras construye cualquier proyecto

2. Â¿QuÃ© experiencia tiene?
Ha trabajado en diferentes entornos y sectores. ComenzÃ³ su trayectoria como becario de investigaciÃ³n en su propia universidad (2 aÃ±os), 
ahi consolidÃ³ sus conocimientos sobre ciencia de datos y empezÃ³ a descubrir el mundo de la nube. TambiÃ©n probÃ³ con SAP en una consultora (1 aÃ±o), 
pero no le acabÃ³ convenciendo. Finalmente se ha dedicado a diseÃ±ar y mantener infraestructura de uno de los mayores bancos digitales de Europa (2 aÃ±os).

3. Â¿Tiene proyectos personales?
A Nikola le gusta investigar por su cuenta y tambiÃ©n participar en hackatons con sus amigos. Ha desarrollado proyectos propios como 
un blog de recetas, una mini app que imita un frigorÃ­fico, un dashboard para datos comerciales, un comparador de precios de productos
de supermercado entre otros. Sobre todo le encanta programar en Python y siempre trata de diseÃ±ar arquitecturas basadas en tecnologÃ­as 
de la nube de AWS como S3, Lambda, SNS, Eventbridge, AppRunner, Cloudformation, Codepipeline, Aurora, Route53, ...

4. Â¿QuÃ© tecnologÃ­as conoce?

Lenguajes de programaciÃ³n
Python (preferido)
JavaScript 
Herramientas y frameworks para ciencia de datos
Pandas
Spark
Scikit-learn
MLflow
TensorFlow
SageMaker
Prefect
Bases de datos
PostgreSQL
DynamoDB
MongoDB
TecnologÃ­as en la nube y DevOps
AWS (Amazon Web Services)
Docker
Serverless Framework
Terraform
CI/CD Pipelines

5. Â¿CÃ³mo contactar?
Puedes contactar con Ã©l a travÃ©s de Linkedin en el link https://www.linkedin.com/in/nikola-dyulgerov/ y a travÃ©s de correo electrÃ³nico
nikolasvdulgerov@gmail.com

6. Â¿En quÃ© tipo de roles estÃ¡ interesado?
Aunque el perfil de Nikola es muy amplio dado que maneja diferentes tecnologÃ­as principalmente esta interesado en perfiles 
de Data Engineer, Data Science o ML Engineer. Dependiendo del proyecto / propuesta tambiÃ©n estarÃ­a disponible para un puesto como Software Engineer

"""

client = InferenceClient(token=HUGGINGFACE_API_KEY)
st.set_page_config(page_title=PAGE_TITLE, page_icon=PAGE_ICON)

st.title(f"{PAGE_ICON} {PAGE_TITLE}")
st.divider()

if "messages" not in st.session_state:
    initial_greeting = "Hola! ğŸ‘‹ Soy MiniNiko. Estoy aquÃ­ para contarte todo lo que quieras saber sobre mi trayectoria profesional"
    st.session_state.messages = [{"role": "assistant", "content": initial_greeting}]
if "selected_pill" not in st.session_state:
    st.session_state.selected_pill = False
if "system_message" not in st.session_state:
    st.session_state.system_message = [{"role": "system", "content": f"Eres un asistente que responde Ãºnicamente preguntas sobre Nikola.\n{CONTEXT}"}]

for message in st.session_state.messages:
    with st.chat_message(message["role"], avatar="ğŸ¤–" if message["role"] == "assistant" else "ğŸ¤“"):
        st.markdown(message["content"])

def preprocess_stream(stream):
    for chunk in stream:
        yield chunk.choices[0].delta.content

def manage_user_input(input_content):
    st.session_state.selected_pill = True
    st.session_state.messages.append({"role": "user", "content": input_content})
    with st.chat_message("user", avatar="ğŸ¤“"):
        st.markdown(input_content)

    with st.chat_message("assistant", avatar="ğŸ¤–"):

        stream = client.chat.completions.create(
            model="meta-llama/Llama-3.2-3B-Instruct",
            messages=st.session_state.system_message + st.session_state.messages,
            temperature=0.5,
            max_tokens=1024,
            top_p=0.7,
            stream=True
        )
        response = preprocess_stream(stream)
        content = st.write_stream(response)
    st.session_state.messages.append({"role": "assistant", "content": content })
    st.rerun()

if not st.session_state.selected_pill:
    if selected_pill := st.pills(
        label="Preguntas ejemplo:",
        options=EXAMPLE_PROMPTS
    ):
        manage_user_input(selected_pill)

if prompt := st.chat_input("PregÃºntame lo que sea sobre Nikola"):
    manage_user_input(prompt)